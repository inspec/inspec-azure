---
title: About the azurerm_network_watcher Resource
platform: azure
---

# azurerm\_network\_watcher

Use the `azurerm_network_watcher` InSpec audit resource to test properties of an Azure
Network Watcher.

<br />

## Availability

### Installation

This resource is available in the `inspec-azure` [resource
pack](https://www.inspec.io/docs/reference/glossary/#resource-pack). To use it, add the
following to your `inspec.yml` in your top-level profile:

    depends:
      inspec-azure:
        git: https://github.com/inspec/inspec-azure.git

You'll also need to setup your Azure credentials; see the resource pack
[README](https://github.com/inspec/inspec-azure#inspec-for-azure).

## Syntax

An `azurerm_network_watcher` resource block identifies a Network Watcher by name and
resource group.

    describe azurerm_network_watcher(resource_group: 'example', name: 'WatcherName') do
      ...
    end

<br />

## Examples

### Test that an example Resource Group has the specified Network Watcher

    describe azurerm_network_watcher(resource_group: 'example', name: 'WatcherName') do
      it { should exist }
    end

### Test that an example Resource Group has a Network Watcher with the Provisioning State value 'Succeeded'

    describe azurerm_network_watcher(resource_group: 'example', name: 'WatcherName') do
      its('provisioning_state') { should eq 'Succeeded' }
    end

<br />

## Parameters

  - `name`
  - `resource_group`

## Parameter Examples

The Resource Group as well as the Network Watcher name.

    describe azurerm_network_watcher(resource_group: 'example', name: 'WatcherName') do
      its('provisioning_state') { should eq 'Succeeded' }
    end

## Properties

  - `provisioning_state`

### provisioning\_state

The provisioning\_state field can be checked for the value of the Provisioning State.

    its('provisioning_state') { should eq 'Succeeded' }

## Matchers

This InSpec audit resource has the following special matchers. For a full list of
available matchers, please visit our [Universal Matchers
page](https://www.inspec.io/docs/reference/matchers/).

### exists

The control will pass if the resource returns a result. Use `should_not` if you expect
zero matches.

    # If we expect 'WatcherName' to always exist
    describe azurerm_network_watcher(resource_group: 'example', name: 'WatcherName') do
      it { should exist }
    end
    
    # If we expect 'WatcherNotFound' to never exist
    describe azurerm_network_watcher(resource_group: 'example', name: 'WatcherNotFound') do
      it { should_not exist }
    end

## Azure Permissions

Your [Service
Principal](https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal)
must be setup with a `contributor` role on the subscription you wish to test.
