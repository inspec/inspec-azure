---
title: About the azurerm_aks_cluster Resource
platform: azure
---

# azurerm\_aks\_cluster

Use the `azurerm_aks_cluster` InSpec audit resource to test properties of an Azure AKS Cluster.

<br />

## Azure REST API version

This resource interacts with version `2018-03-31` of the Azure Management API.
For more information see the [official Azure documentation](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/networksecuritygroups/get).

At the moment, there doesn't appear to be a way to select the version of the
Azure API docs. If you notice a newer version being referenced in the official
documentation please open an issue or submit a pull request using the updated
version.

## Availability

### Installation

This resource is available in the `inspec-azure` [resource
pack](https://www.inspec.io/docs/reference/glossary/#resource-pack). To use it, add the
following to your `inspec.yml` in your top-level profile:

    depends:
      inspec-azure:
        git: https://github.com/inspec/inspec-azure.git

You'll also need to setup your Azure credentials; see the resource pack
[README](https://github.com/inspec/inspec-azure#inspec-for-azure).

## Syntax

An `azurerm_aks_cluster` resource block identifies an AKS Cluster by name and Resource Group.

    describe azurerm_aks_cluster(resource_group: 'example', name: 'ClusterName') do
      ...
    end

<br />

## Examples

### Test that an example Resource Group has the specified AKS Cluster

    describe azurerm_aks_cluster(resource_group: 'example', name: 'ClusterName') do
      it { should exist }
    end

### Test that a specified AKS cluster was successfully provisioned

    describe azurerm_network_security_group(resource_group: 'example', name: 'GroupName') do
      its('provisioning_state') { should cmp "Succeeded" }
    end

### Test that a specified AKS cluster the correct number of nodes in pool

    describe azurerm_network_security_group(resource_group: 'example', name: 'GroupName') do
      its('pool_count') { should = 5 }
    end

<br />

## Parameters

  - `name`
  - `resource_group`

## Parameter Examples

The Resource Group as well as the AKS Cluster name.

    describe azurerm_aks_cluster(resource_group: 'example', name: 'ClusterName') do
      it { should exist }
    end

## Attributes

  - `provisioning_state`
  - `kubernetes_version`
  - `dns_prefix`
  - `fqdn`
  - `pool_name`
  - `pool_count`
  - `pool_vm_size`
  - `pool_storage_profile`
  - `pool_max_pods`
  - `pool_os_type`

### provisioning\_state

The provisioning\_state property contains the provisioning state of the named cluster.

    its('provisioning_state') { should_not cmp "Failed" }

### kubernetes\_version

The kubernetes\_version property contains the version of Kubernetes specified when creating the managed cluster.

    its('kubernetes_version') { should cmp "1.9.6" }

### dns\_prefix

The dns\_prefix property contains the DNS prefix specified when creating the managed cluster.

    its('dns_prefix') { should cmp "mycluster" }

### fqdn

The fqdn property contains the FDQN for the master pool.

    its('fqdn') { should cmp "dnsprefix1-abcd1234.hcp.eastus.azmk8s.io" }

### pool\_name

The pool\_name property contains the name of the cluster.

    its('pool_name') { should cmp "mycluster" }

### pool\_count

The pool\_count property contains the number of agents (VMs) to host docker containers.

    its('pool_count') { should cmp "5" }

### pool\_vm\_size

The pool\_vm\_size property contains the size of agent VMs.

    its('pool_vm_size') { should cmp "Standard_DS1_v2" }

### pool\_storage\_profile

The pool\_storage\_profile property contains type of storage used.

    its('pool_storage_profile') { should cmp "ManagedDisks" }

### pool\_max\_pods

The pool\_max\_pods property contains the maximum number of pods that can run on a node.

    its('pool_max_pods') { should cmp "110" }

### pool\_os\_type

The pool\_os\_type property contains the OS used for the cluster.

    its('pool_os_type') { should cmp "Linux" }



### Other Attributes

There are additional attributes that may be accessed that we have not
documented. Please take a look at the [Azure documentation](#-Azure-REST-API-version).
Any attribute in the response may be accessed with the key names separated by
dots (`.`).

The API may not always return keys that do not have any associated data. There
may be cases where the deeply nested property may not have the desired
attribute along your call chain. If find yourself writing tests against
properties that may be nil, fork this resource pack and add an accessor to the
resource. Within that accessor you'll be able to guard against nil keys. Pull
requests are always welcome.

## Matchers

This InSpec audit resource has the following special matchers. For a full list of
available matchers, please visit our [Universal Matchers
page](https://www.inspec.io/docs/reference/matchers/).

### exists

The control will pass if the resource returns a result. Use `should_not` if you expect
zero matches.

    # If we expect 'ClusterName' to always exist
    describe azurerm_aks_cluster(resource_group: 'example', name: 'ClusterName') do
      it { should exist }
    end

    # If we expect 'ClusterName' to never exist
    describe azurerm_aks_cluster(resource_group: 'example', name: 'ClusterName') do
      it { should_not exist }
    end

## Azure Permissions

Your [Service
Principal](https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal)
must be setup with a `contributor` role on the subscription you wish to test.
